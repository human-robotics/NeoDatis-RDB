// class generated by JConcept Database ClassBuilder 2.0
package org.neodatis.rdb.sqllite;

// import JConcept Database library
import org.neodatis.rdb.*;

import org.neodatis.rdb.query.*;

import org.neodatis.rdb.implementation.*;

// For Date attribute
import java.util.Date;

// For BigDecimal attribute
import java.math.*;

public class User extends org.neodatis.rdb.DbObjectWithLongId  implements DbObjectMapping , org.neodatis.rdb.ToX
{
	//** Database fields
	protected Long dbid;
	protected String dbname;
	protected Long dbgender;
	protected String dbemail;
	protected String dbbirth_date;
	//** Db Object
	public static Service<User> DB = new Service<User>(User.class);

	//** Construtor
	public User()
	{
	}

	//** To get the primary key field name
	public PrimaryKey getPrimaryKey()
	{
		return new DefaultPrimaryKey("id");
	}

	//** To get the table name
	public DBTable getTable()
	{
		return new DefaultDBTable("User");
	}

	//** To check equality
	public boolean equals(Object in_object)
	{
		if(in_object==null) return false;
		if(!(in_object instanceof DbObjectMapping)) return false;
		DbObjectMapping objectToCompare = (DbObjectMapping) in_object;
		try 
		{
			return getPrimaryKey().getValue(this).equals(objectToCompare.getPrimaryKey().getValue(objectToCompare));
		} 
		catch(Exception e)
		{
			return false; 
		}
	}

	//** Setters and Getters

	// Setter for attribute id
	public void setId( Long in_id ) 
	{
		dbid = in_id;
	}

	// Getter for attribute id
	public Long getId()
	{
		return dbid;
	}

	// Setter for attribute name
	public void setName( String in_name ) 
	{
		dbname = in_name;
	}

	// Getter for attribute name
	public String getName()
	{
		return dbname;
	}

	// Setter for attribute gender
	public void setGender( Long in_gender ) 
	{
		dbgender = in_gender;
	}

	// Getter for attribute gender
	public Long getGender()
	{
		return dbgender;
	}

	// Setter for attribute email
	public void setEmail( String in_email ) 
	{
		dbemail = in_email;
	}

	// Getter for attribute email
	public String getEmail()
	{
		return dbemail;
	}

	// Setter for attribute birthDate
	public void setBirthDate( String in_birthDate ) 
	{
		dbbirth_date = in_birthDate;
	}

	// Getter for attribute birthDate
	public String getBirthDate()
	{
		return dbbirth_date;
	}
	/** toString method*/
	public String toString()
	{

		StringBuffer sResult = new StringBuffer();
		sResult.append("\n[\n");
		sResult.append( "\t id : " ).append( getId()).append("\n");
		sResult.append( "\t name : " ).append( getName()).append("\n");
		sResult.append( "\t gender : " ).append( getGender()).append("\n");
		sResult.append( "\t email : " ).append( getEmail()).append("\n");
		sResult.append( "\t birthDate : " ).append( getBirthDate()).append("\n");
		sResult.append("]\n");
		return sResult.toString();
	}

	/** toMap method*/
	public java.util.Map<String,Object> toMap()
	{

		java.util.Map<String,Object> map = new java.util.HashMap<String,Object>();
		map.put( "id" , String.valueOf(getId()));
		map.put( "name" , String.valueOf(getName()));
		map.put( "gender" , String.valueOf(getGender()));
		map.put( "email" , String.valueOf(getEmail()));
		map.put( "birthDate" , String.valueOf(getBirthDate()));
		return map;
	}

	/** toJSon method*/
	public String toJSon()
	{

		StringBuffer sResult = new StringBuffer();
		sResult.append("{");
		sResult.append( "\"id\":\"" ).append(String.valueOf(getId()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"name\":\"" ).append(String.valueOf(getName()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"gender\":\"" ).append(String.valueOf(getGender()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"email\":\"" ).append(String.valueOf(getEmail()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"birthDate\":\"" ).append(String.valueOf(getBirthDate()) ).append("\"");
		sResult.append("}");
		return sResult.toString();
	}

	/** toList method*/
	public java.util.List<String> toList()
	{

		java.util.List<String> list = new java.util.ArrayList<String>();
		list.add( String.valueOf(getId()));
		list.add( String.valueOf(getName()));
		list.add( String.valueOf(getGender()));
		list.add( String.valueOf(getEmail()));
		list.add( String.valueOf(getBirthDate()));
		return list;
	}

	/** getAttributeNames method*/
	public java.util.List<String> getAttributeNames()
	{

		java.util.List<String> list = new java.util.ArrayList<String>();
		list.add( "id");
		list.add( "name");
		list.add( "gender");
		list.add( "email");
		list.add( "birthDate");
		return list;
	}

}
	//** Database fields
