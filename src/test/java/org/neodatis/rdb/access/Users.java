// class generated by JConcept Database ClassBuilder 2.0
package org.neodatis.rdb.access;

// import JConcept Database library
import org.neodatis.rdb.*;

import org.neodatis.rdb.query.*;

import org.neodatis.rdb.implementation.*;

// For Date attribute
import java.util.Date;

// For BigDecimal attribute
import java.math.*;

public class Users extends org.neodatis.rdb.DbObjectWithLongId  implements DbObjectMapping , org.neodatis.rdb.ToX
 ,java.io.Serializable
{
	//** Database fields
	protected Long dbid;
	protected String dbuuid;
	protected String dbphone_number;
	protected String dbfirst_name;
	protected String dblast_name;
	protected String dbcountry;
	protected String dbcity;
	protected String dbemail;
	protected Date dbcreated;
	protected Date dbupdated;
	protected Long dbstatus;
	//** Db Object
	public static Service<Users> DB = new Service<Users>(Users.class);

	//** Construtor
	public Users()
	{
	}

	//** To get the primary key field name
	public PrimaryKey getPrimaryKey()
	{
		return new DefaultPrimaryKey("id");
	}

	//** To get the table name
	public DBTable getTable()
	{
		return new DefaultDBTable("users");
	}

	//** To check equality
	public boolean equals(Object in_object)
	{
		if(in_object==null) return false;
		if(!(in_object instanceof DbObjectMapping)) return false;
		DbObjectMapping objectToCompare = (DbObjectMapping) in_object;
		try 
		{
			return getPrimaryKey().getValue(this).equals(objectToCompare.getPrimaryKey().getValue(objectToCompare));
		} 
		catch(Exception e)
		{
			return false; 
		}
	}

	//** Setters and Getters

	// Setter for attribute id
	public void setId( Long in_id ) 
	{
		dbid = in_id;
	}

	// Getter for attribute id
	public Long getId()
	{
		return dbid;
	}

	// Setter for attribute uuid
	public void setUuid( String in_uuid ) 
	{
		dbuuid = in_uuid;
	}

	// Getter for attribute uuid
	public String getUuid()
	{
		return dbuuid;
	}

	// Setter for attribute phoneNumber
	public void setPhoneNumber( String in_phoneNumber ) 
	{
		dbphone_number = in_phoneNumber;
	}

	// Getter for attribute phoneNumber
	public String getPhoneNumber()
	{
		return dbphone_number;
	}

	// Setter for attribute firstName
	public void setFirstName( String in_firstName ) 
	{
		dbfirst_name = in_firstName;
	}

	// Getter for attribute firstName
	public String getFirstName()
	{
		return dbfirst_name;
	}

	// Setter for attribute lastName
	public void setLastName( String in_lastName ) 
	{
		dblast_name = in_lastName;
	}

	// Getter for attribute lastName
	public String getLastName()
	{
		return dblast_name;
	}

	// Setter for attribute country
	public void setCountry( String in_country ) 
	{
		dbcountry = in_country;
	}

	// Getter for attribute country
	public String getCountry()
	{
		return dbcountry;
	}

	// Setter for attribute city
	public void setCity( String in_city ) 
	{
		dbcity = in_city;
	}

	// Getter for attribute city
	public String getCity()
	{
		return dbcity;
	}

	// Setter for attribute email
	public void setEmail( String in_email ) 
	{
		dbemail = in_email;
	}

	// Getter for attribute email
	public String getEmail()
	{
		return dbemail;
	}

	// Setter for attribute created
	public void setCreated( Date in_created ) 
	{
		dbcreated = in_created;
	}

	// Getter for attribute created
	public Date getCreated()
	{
		return dbcreated;
	}

	// Setter for attribute updated
	public void setUpdated( Date in_updated ) 
	{
		dbupdated = in_updated;
	}

	// Getter for attribute updated
	public Date getUpdated()
	{
		return dbupdated;
	}

	// Setter for attribute status
	public void setStatus( Long in_status ) 
	{
		dbstatus = in_status;
	}

	// Getter for attribute status
	public Long getStatus()
	{
		return dbstatus;
	}
	/** toString method*/
	public String toString()
	{

		StringBuffer sResult = new StringBuffer();
		sResult.append("\n[\n");
		sResult.append( "\t id : " ).append( getId()).append("\n");
		sResult.append( "\t uuid : " ).append( getUuid()).append("\n");
		sResult.append( "\t phoneNumber : " ).append( getPhoneNumber()).append("\n");
		sResult.append( "\t firstName : " ).append( getFirstName()).append("\n");
		sResult.append( "\t lastName : " ).append( getLastName()).append("\n");
		sResult.append( "\t country : " ).append( getCountry()).append("\n");
		sResult.append( "\t city : " ).append( getCity()).append("\n");
		sResult.append( "\t email : " ).append( getEmail()).append("\n");
		sResult.append( "\t created : " ).append( getCreated()).append("\n");
		sResult.append( "\t updated : " ).append( getUpdated()).append("\n");
		sResult.append( "\t status : " ).append( getStatus()).append("\n");
		sResult.append("]\n");
		return sResult.toString();
	}

	/** toMap method*/
	public java.util.Map<String,Object> toMap()
	{

		java.util.Map<String,Object> map = new java.util.HashMap<String,Object>();
		map.put( "id" , String.valueOf(getId()));
		map.put( "uuid" , String.valueOf(getUuid()));
		map.put( "phoneNumber" , String.valueOf(getPhoneNumber()));
		map.put( "firstName" , String.valueOf(getFirstName()));
		map.put( "lastName" , String.valueOf(getLastName()));
		map.put( "country" , String.valueOf(getCountry()));
		map.put( "city" , String.valueOf(getCity()));
		map.put( "email" , String.valueOf(getEmail()));
		map.put( "created" , String.valueOf(getCreated()));
		map.put( "updated" , String.valueOf(getUpdated()));
		map.put( "status" , String.valueOf(getStatus()));
		return map;
	}

	/** toJSon method*/
	public String toJSon()
	{

		StringBuffer sResult = new StringBuffer();
		sResult.append("{");
		sResult.append( "\"id\":\"" ).append(String.valueOf(getId()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"uuid\":\"" ).append(String.valueOf(getUuid()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"phoneNumber\":\"" ).append(String.valueOf(getPhoneNumber()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"firstName\":\"" ).append(String.valueOf(getFirstName()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"lastName\":\"" ).append(String.valueOf(getLastName()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"country\":\"" ).append(String.valueOf(getCountry()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"city\":\"" ).append(String.valueOf(getCity()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"email\":\"" ).append(String.valueOf(getEmail()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"created\":\"" ).append(String.valueOf(getCreated()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"updated\":\"" ).append(String.valueOf(getUpdated()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"status\":\"" ).append(String.valueOf(getStatus()) ).append("\"");
		sResult.append("}");
		return sResult.toString();
	}

	/** toList method*/
	public java.util.List<String> toList()
	{

		java.util.List<String> list = new java.util.ArrayList<String>();
		list.add( String.valueOf(getId()));
		list.add( String.valueOf(getUuid()));
		list.add( String.valueOf(getPhoneNumber()));
		list.add( String.valueOf(getFirstName()));
		list.add( String.valueOf(getLastName()));
		list.add( String.valueOf(getCountry()));
		list.add( String.valueOf(getCity()));
		list.add( String.valueOf(getEmail()));
		list.add( String.valueOf(getCreated()));
		list.add( String.valueOf(getUpdated()));
		list.add( String.valueOf(getStatus()));
		return list;
	}

	/** getAttributeNames method*/
	public java.util.List<String> getAttributeNames()
	{

		java.util.List<String> list = new java.util.ArrayList<String>();
		list.add( "id");
		list.add( "uuid");
		list.add( "phoneNumber");
		list.add( "firstName");
		list.add( "lastName");
		list.add( "country");
		list.add( "city");
		list.add( "email");
		list.add( "created");
		list.add( "updated");
		list.add( "status");
		return list;
	}

}
	//** Database fields
