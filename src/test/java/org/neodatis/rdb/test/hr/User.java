// class generated by JConcept Database ClassBuilder 2.0
package org.neodatis.rdb.test.hr;

// import JConcept Database library
import org.neodatis.rdb.*;

import org.neodatis.rdb.query.*;

import org.neodatis.rdb.implementation.*;

// For Date attribute
import java.util.Date;

// For BigDecimal attribute
import java.math.*;

public class User extends org.neodatis.rdb.DbObjectWithLongId  implements DbObjectMapping , org.neodatis.rdb.ToX
 
{
	//** Database fields
	protected Long dbid;
	protected String dbuid;
	protected String dbname;
	protected String dbemail;
	protected String dbpassword;
	protected String dbcompany;
	protected Date dblast_login;
	protected Date dbcreated;
	protected Date dbupdated;
	protected String dbcreated_by;
	protected String dbupdated_by;
	protected Long dblogin_attempts;
	protected Long dbstatus;
	protected String dbprofile_uid;
	protected String dbparent_user_uid;
	//** Db Object
	public static Service<User> DB = new Service<User>(User.class);

	//** Construtor
	public User()
	{
	}

	//** To get the primary key field name
	public PrimaryKey getPrimaryKey()
	{
		return new DefaultPrimaryKey("id");
	}

	//** To get the table name
	public DBTable getTable()
	{
		return new DefaultDBTable("user");
	}

	//** To check equality
	public boolean equals(Object in_object)
	{
		if(in_object==null) return false;
		if(!(in_object instanceof DbObjectMapping)) return false;
		DbObjectMapping objectToCompare = (DbObjectMapping) in_object;
		try 
		{
			return getPrimaryKey().getValue(this).equals(objectToCompare.getPrimaryKey().getValue(objectToCompare));
		} 
		catch(Exception e)
		{
			return false; 
		}
	}

	//** Setters and Getters

	// Setter for attribute id
	public void setId( Long in_id ) 
	{
		dbid = in_id;
	}

	// Getter for attribute id
	public Long getId()
	{
		return dbid;
	}

	// Setter for attribute uid
	public void setUid( String in_uid ) 
	{
		dbuid = in_uid;
	}

	// Getter for attribute uid
	public String getUid()
	{
		return dbuid;
	}

	// Setter for attribute name
	public void setName( String in_name ) 
	{
		dbname = in_name;
	}

	// Getter for attribute name
	public String getName()
	{
		return dbname;
	}

	// Setter for attribute email
	public void setEmail( String in_email ) 
	{
		dbemail = in_email;
	}

	// Getter for attribute email
	public String getEmail()
	{
		return dbemail;
	}

	// Setter for attribute password
	public void setPassword( String in_password ) 
	{
		dbpassword = in_password;
	}

	// Getter for attribute password
	public String getPassword()
	{
		return dbpassword;
	}

	// Setter for attribute company
	public void setCompany( String in_company ) 
	{
		dbcompany = in_company;
	}

	// Getter for attribute company
	public String getCompany()
	{
		return dbcompany;
	}

	// Setter for attribute lastLogin
	public void setLastLogin( Date in_lastLogin ) 
	{
		dblast_login = in_lastLogin;
	}

	// Getter for attribute lastLogin
	public Date getLastLogin()
	{
		return dblast_login;
	}

	// Setter for attribute created
	public void setCreated( Date in_created ) 
	{
		dbcreated = in_created;
	}

	// Getter for attribute created
	public Date getCreated()
	{
		return dbcreated;
	}

	// Setter for attribute updated
	public void setUpdated( Date in_updated ) 
	{
		dbupdated = in_updated;
	}

	// Getter for attribute updated
	public Date getUpdated()
	{
		return dbupdated;
	}

	// Setter for attribute createdBy
	public void setCreatedBy( String in_createdBy ) 
	{
		dbcreated_by = in_createdBy;
	}

	// Getter for attribute createdBy
	public String getCreatedBy()
	{
		return dbcreated_by;
	}

	// Setter for attribute updatedBy
	public void setUpdatedBy( String in_updatedBy ) 
	{
		dbupdated_by = in_updatedBy;
	}

	// Getter for attribute updatedBy
	public String getUpdatedBy()
	{
		return dbupdated_by;
	}

	// Setter for attribute loginAttempts
	public void setLoginAttempts( Long in_loginAttempts ) 
	{
		dblogin_attempts = in_loginAttempts;
	}

	// Getter for attribute loginAttempts
	public Long getLoginAttempts()
	{
		return dblogin_attempts;
	}

	// Setter for attribute status
	public void setStatus( Long in_status ) 
	{
		dbstatus = in_status;
	}

	// Getter for attribute status
	public Long getStatus()
	{
		return dbstatus;
	}

	// Setter for attribute profileUid
	public void setProfileUid( String in_profileUid ) 
	{
		dbprofile_uid = in_profileUid;
	}

	// Getter for attribute profileUid
	public String getProfileUid()
	{
		return dbprofile_uid;
	}

	// Setter for attribute parentUserUid
	public void setParentUserUid( String in_parentUserUid ) 
	{
		dbparent_user_uid = in_parentUserUid;
	}

	// Getter for attribute parentUserUid
	public String getParentUserUid()
	{
		return dbparent_user_uid;
	}

	/** toString method*/
	public String toString()
	{

		StringBuffer sResult = new StringBuffer();
		sResult.append("\n[\n");
		sResult.append( "\t id : " ).append( getId()).append("\n");
		sResult.append( "\t uid : " ).append( getUid()).append("\n");
		sResult.append( "\t name : " ).append( getName()).append("\n");
		sResult.append( "\t email : " ).append( getEmail()).append("\n");
		sResult.append( "\t password : " ).append( getPassword()).append("\n");
		sResult.append( "\t company : " ).append( getCompany()).append("\n");
		sResult.append( "\t lastLogin : " ).append( getLastLogin()).append("\n");
		sResult.append( "\t created : " ).append( getCreated()).append("\n");
		sResult.append( "\t updated : " ).append( getUpdated()).append("\n");
		sResult.append( "\t createdBy : " ).append( getCreatedBy()).append("\n");
		sResult.append( "\t updatedBy : " ).append( getUpdatedBy()).append("\n");
		sResult.append( "\t loginAttempts : " ).append( getLoginAttempts()).append("\n");
		sResult.append( "\t status : " ).append( getStatus()).append("\n");
		sResult.append( "\t profileUid : " ).append( getProfileUid()).append("\n");
		sResult.append( "\t parentUserUid : " ).append( getParentUserUid()).append("\n");
		sResult.append("]\n");
		return sResult.toString();
	}

	/** toMap method*/
	public java.util.Map<String,Object> toMap()
	{

		java.util.Map<String,Object> map = new java.util.HashMap<String,Object>();
		map.put( "id" , String.valueOf(getId()));
		map.put( "uid" , String.valueOf(getUid()));
		map.put( "name" , String.valueOf(getName()));
		map.put( "email" , String.valueOf(getEmail()));
		map.put( "password" , String.valueOf(getPassword()));
		map.put( "company" , String.valueOf(getCompany()));
		map.put( "lastLogin" , String.valueOf(getLastLogin()));
		map.put( "created" , String.valueOf(getCreated()));
		map.put( "updated" , String.valueOf(getUpdated()));
		map.put( "createdBy" , String.valueOf(getCreatedBy()));
		map.put( "updatedBy" , String.valueOf(getUpdatedBy()));
		map.put( "loginAttempts" , String.valueOf(getLoginAttempts()));
		map.put( "status" , String.valueOf(getStatus()));
		map.put( "profileUid" , String.valueOf(getProfileUid()));
		map.put( "parentUserUid" , String.valueOf(getParentUserUid()));
		return map;
	}

	/** toJSon method*/
	public String toJSon()
	{

		StringBuffer sResult = new StringBuffer();
		sResult.append("{");
		sResult.append( "\"id\":\"" ).append(String.valueOf(getId()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"uid\":\"" ).append(String.valueOf(getUid()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"name\":\"" ).append(String.valueOf(getName()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"email\":\"" ).append(String.valueOf(getEmail()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"password\":\"" ).append(String.valueOf(getPassword()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"company\":\"" ).append(String.valueOf(getCompany()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"lastLogin\":\"" ).append(String.valueOf(getLastLogin()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"created\":\"" ).append(String.valueOf(getCreated()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"updated\":\"" ).append(String.valueOf(getUpdated()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"createdBy\":\"" ).append(String.valueOf(getCreatedBy()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"updatedBy\":\"" ).append(String.valueOf(getUpdatedBy()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"loginAttempts\":\"" ).append(String.valueOf(getLoginAttempts()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"status\":\"" ).append(String.valueOf(getStatus()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"profileUid\":\"" ).append(String.valueOf(getProfileUid()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"parentUserUid\":\"" ).append(String.valueOf(getParentUserUid()) ).append("\"");
		sResult.append( ",");
		sResult.append("}");
		return sResult.toString();
	}

	/** toList method*/
	public java.util.List<String> toList()
	{

		java.util.List<String> list = new java.util.ArrayList<String>();
		list.add( String.valueOf(getId()));
		list.add( String.valueOf(getUid()));
		list.add( String.valueOf(getName()));
		list.add( String.valueOf(getEmail()));
		list.add( String.valueOf(getPassword()));
		list.add( String.valueOf(getCompany()));
		list.add( String.valueOf(getLastLogin()));
		list.add( String.valueOf(getCreated()));
		list.add( String.valueOf(getUpdated()));
		list.add( String.valueOf(getCreatedBy()));
		list.add( String.valueOf(getUpdatedBy()));
		list.add( String.valueOf(getLoginAttempts()));
		list.add( String.valueOf(getStatus()));
		list.add( String.valueOf(getProfileUid()));
		list.add( String.valueOf(getParentUserUid()));
		return list;
	}

	/** getAttributeNames method*/
	public java.util.List<String> getAttributeNames()
	{

		java.util.List<String> list = new java.util.ArrayList<String>();
		list.add( "id");
		list.add( "uid");
		list.add( "name");
		list.add( "email");
		list.add( "password");
		list.add( "company");
		list.add( "lastLogin");
		list.add( "created");
		list.add( "updated");
		list.add( "createdBy");
		list.add( "updatedBy");
		list.add( "loginAttempts");
		list.add( "status");
		list.add( "profileUid");
		list.add( "parentUserUid");
		list.add( "userGroupUid");
		return list;
	}

}
	//** Database fields
