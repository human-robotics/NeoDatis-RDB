// class generated by JConcept Database ClassBuilder 2.0
package org.neodatis.rdb.mentor.model;

// import JConcept Database library
import org.neodatis.rdb.DBTable;
import org.neodatis.rdb.DbObjectMapping;
import org.neodatis.rdb.PrimaryKey;
import org.neodatis.rdb.Service;
import org.neodatis.rdb.implementation.DefaultPrimaryKey;
import org.neodatis.rdb.query.DefaultDBTable;
// For Date attribute
// For BigDecimal attribute

public class Status extends org.neodatis.rdb.DbObjectWithLongId  implements DbObjectMapping , org.neodatis.rdb.ToX
 ,java.io.Serializable
{
	//** Database fields
	protected Long dbid;
	protected String dbcode;
	protected String dbstringvalue;
	protected Long dbintvalue;
	//** Db Object
	public static Service<Status> DB = new Service<Status>(Status.class);

	//** Construtor
	public Status()
	{
	}

	//** To get the primary key field name
	public PrimaryKey getPrimaryKey()
	{
		return new DefaultPrimaryKey("id");
	}

	//** To get the table name
	public DBTable getTable()
	{
		return new DefaultDBTable("status");
	}

	//** To check equality
	public boolean equals(Object in_object)
	{
		DbObjectMapping objectToCompare = (DbObjectMapping) in_object;
		try 
		{
			return getPrimaryKey().getValue(this).equals(objectToCompare.getPrimaryKey().getValue(objectToCompare));
		} 
		catch(Exception e)
		{
			return false; 
		}
	}

	//** Setters and Getters

	// Setter for attribute id
	public void setId( Long in_id ) 
	{
		dbid = in_id;
	}

	// Getter for attribute id
	public Long getId()
	{
		return dbid;
	}

	// Setter for attribute code
	public void setCode( String in_code ) 
	{
		dbcode = in_code;
	}

	// Getter for attribute code
	public String getCode()
	{
		return dbcode;
	}

	// Setter for attribute stringvalue
	public void setStringvalue( String in_stringvalue ) 
	{
		dbstringvalue = in_stringvalue;
	}

	// Getter for attribute stringvalue
	public String getStringvalue()
	{
		return dbstringvalue;
	}

	// Setter for attribute intvalue
	public void setIntvalue( Long in_intvalue ) 
	{
		dbintvalue = in_intvalue;
	}

	// Getter for attribute intvalue
	public Long getIntvalue()
	{
		return dbintvalue;
	}
	/** toString method*/
	public String toString()
	{

		StringBuffer sResult = new StringBuffer();
		sResult.append("\n[\n");
		sResult.append( "\t id : " ).append( getId()).append("\n");
		sResult.append( "\t code : " ).append( getCode()).append("\n");
		sResult.append( "\t stringvalue : " ).append( getStringvalue()).append("\n");
		sResult.append( "\t intvalue : " ).append( getIntvalue()).append("\n");
		sResult.append("]\n");
		return sResult.toString();
	}

	/** toMap method*/
	public java.util.Map<String,Object> toMap()
	{

		java.util.Map<String,Object> map = new java.util.HashMap<String,Object>();
		map.put( "id" , String.valueOf(getId()));
		map.put( "code" , String.valueOf(getCode()));
		map.put( "stringvalue" , String.valueOf(getStringvalue()));
		map.put( "intvalue" , String.valueOf(getIntvalue()));
		return map;
	}

	/** toJSon method*/
	public String toJSon()
	{

		StringBuffer sResult = new StringBuffer();
		sResult.append("{");
		sResult.append( "\"id\":\"" ).append(String.valueOf(getId()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"code\":\"" ).append(String.valueOf(getCode()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"stringvalue\":\"" ).append(String.valueOf(getStringvalue()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"intvalue\":\"" ).append(String.valueOf(getIntvalue()) ).append("\"");
		sResult.append("}");
		return sResult.toString();
	}

	/** toList method*/
	public java.util.List<String> toList()
	{

		java.util.List<String> list = new java.util.ArrayList<String>();
		list.add( String.valueOf(getId()));
		list.add( String.valueOf(getCode()));
		list.add( String.valueOf(getStringvalue()));
		list.add( String.valueOf(getIntvalue()));
		return list;
	}

	/** getAttributeNames method*/
	public java.util.List<String> getAttributeNames()
	{

		java.util.List<String> list = new java.util.ArrayList<String>();
		list.add( "id");
		list.add( "code");
		list.add( "stringvalue");
		list.add( "intvalue");
		return list;
	}

}
	//** Database fields
