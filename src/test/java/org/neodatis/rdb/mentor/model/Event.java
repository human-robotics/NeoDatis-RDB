// class generated by JConcept Database ClassBuilder 2.0
package org.neodatis.rdb.mentor.model;

// import JConcept Database library
// For Date attribute
import java.util.Date;

import org.neodatis.rdb.DBTable;
import org.neodatis.rdb.DbObjectMapping;
import org.neodatis.rdb.PrimaryKey;
import org.neodatis.rdb.Service;
import org.neodatis.rdb.implementation.DefaultPrimaryKey;
import org.neodatis.rdb.query.DefaultDBTable;
// For BigDecimal attribute

public class Event extends org.neodatis.rdb.DbObjectWithLongId  implements DbObjectMapping , org.neodatis.rdb.ToX
 ,java.io.Serializable
{
	//** Database fields
	protected Long dbid;
	protected Date dbdate;
	protected String dbequipment_type;
	protected String dbalarme_type;
	protected String dbequipment_name;
	protected Long dbequipment_id;
	protected String dbdescription;
	protected String dbexternal_id;
	protected String dbparameter1;
	protected String dbparameter2;
	//** Db Object
	public static Service<Event> DB = new Service<Event>(Event.class);

	//** Construtor
	public Event()
	{
	}

	//** To get the primary key field name
	public PrimaryKey getPrimaryKey()
	{
		return new DefaultPrimaryKey("id");
	}

	//** To get the table name
	public DBTable getTable()
	{
		return new DefaultDBTable("event");
	}

	//** To check equality
	public boolean equals(Object in_object)
	{
		DbObjectMapping objectToCompare = (DbObjectMapping) in_object;
		try 
		{
			return getPrimaryKey().getValue(this).equals(objectToCompare.getPrimaryKey().getValue(objectToCompare));
		} 
		catch(Exception e)
		{
			return false; 
		}
	}

	//** Setters and Getters

	// Setter for attribute id
	public void setId( Long in_id ) 
	{
		dbid = in_id;
	}

	// Getter for attribute id
	public Long getId()
	{
		return dbid;
	}

	// Setter for attribute date
	public void setDate( Date in_date ) 
	{
		dbdate = in_date;
	}

	// Getter for attribute date
	public Date getDate()
	{
		return dbdate;
	}

	// Setter for attribute equipmentType
	public void setEquipmentType( String in_equipmentType ) 
	{
		dbequipment_type = in_equipmentType;
	}

	// Getter for attribute equipmentType
	public String getEquipmentType()
	{
		return dbequipment_type;
	}

	// Setter for attribute alarmeType
	public void setAlarmeType( String in_alarmeType ) 
	{
		dbalarme_type = in_alarmeType;
	}

	// Getter for attribute alarmeType
	public String getAlarmeType()
	{
		return dbalarme_type;
	}

	// Setter for attribute equipmentName
	public void setEquipmentName( String in_equipmentName ) 
	{
		dbequipment_name = in_equipmentName;
	}

	// Getter for attribute equipmentName
	public String getEquipmentName()
	{
		return dbequipment_name;
	}

	// Setter for attribute equipmentId
	public void setEquipmentId( Long in_equipmentId ) 
	{
		dbequipment_id = in_equipmentId;
	}

	// Getter for attribute equipmentId
	public Long getEquipmentId()
	{
		return dbequipment_id;
	}

	// Setter for attribute description
	public void setDescription( String in_description ) 
	{
		dbdescription = in_description;
	}

	// Getter for attribute description
	public String getDescription()
	{
		return dbdescription;
	}

	// Setter for attribute externalId
	public void setExternalId( String in_externalId ) 
	{
		dbexternal_id = in_externalId;
	}

	// Getter for attribute externalId
	public String getExternalId()
	{
		return dbexternal_id;
	}

	// Setter for attribute parameter1
	public void setParameter1( String in_parameter1 ) 
	{
		dbparameter1 = in_parameter1;
	}

	// Getter for attribute parameter1
	public String getParameter1()
	{
		return dbparameter1;
	}

	// Setter for attribute parameter2
	public void setParameter2( String in_parameter2 ) 
	{
		dbparameter2 = in_parameter2;
	}

	// Getter for attribute parameter2
	public String getParameter2()
	{
		return dbparameter2;
	}
	/** toString method*/
	public String toString()
	{

		StringBuffer sResult = new StringBuffer();
		sResult.append("\n[\n");
		sResult.append( "\t id : " ).append( getId()).append("\n");
		sResult.append( "\t date : " ).append( getDate()).append("\n");
		sResult.append( "\t equipmentType : " ).append( getEquipmentType()).append("\n");
		sResult.append( "\t alarmeType : " ).append( getAlarmeType()).append("\n");
		sResult.append( "\t equipmentName : " ).append( getEquipmentName()).append("\n");
		sResult.append( "\t equipmentId : " ).append( getEquipmentId()).append("\n");
		sResult.append( "\t description : " ).append( getDescription()).append("\n");
		sResult.append( "\t externalId : " ).append( getExternalId()).append("\n");
		sResult.append( "\t parameter1 : " ).append( getParameter1()).append("\n");
		sResult.append( "\t parameter2 : " ).append( getParameter2()).append("\n");
		sResult.append("]\n");
		return sResult.toString();
	}

	/** toMap method*/
	public java.util.Map<String,Object> toMap()
	{

		java.util.Map<String,Object> map = new java.util.HashMap<String,Object>();
		map.put( "id" , String.valueOf(getId()));
		map.put( "date" , String.valueOf(getDate()));
		map.put( "equipmentType" , String.valueOf(getEquipmentType()));
		map.put( "alarmeType" , String.valueOf(getAlarmeType()));
		map.put( "equipmentName" , String.valueOf(getEquipmentName()));
		map.put( "equipmentId" , String.valueOf(getEquipmentId()));
		map.put( "description" , String.valueOf(getDescription()));
		map.put( "externalId" , String.valueOf(getExternalId()));
		map.put( "parameter1" , String.valueOf(getParameter1()));
		map.put( "parameter2" , String.valueOf(getParameter2()));
		return map;
	}

	/** toJSon method*/
	public String toJSon()
	{

		StringBuffer sResult = new StringBuffer();
		sResult.append("{");
		sResult.append( "\"id\":\"" ).append(String.valueOf(getId()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"date\":\"" ).append(String.valueOf(getDate()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"equipmentType\":\"" ).append(String.valueOf(getEquipmentType()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"alarmeType\":\"" ).append(String.valueOf(getAlarmeType()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"equipmentName\":\"" ).append(String.valueOf(getEquipmentName()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"equipmentId\":\"" ).append(String.valueOf(getEquipmentId()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"description\":\"" ).append(String.valueOf(getDescription()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"externalId\":\"" ).append(String.valueOf(getExternalId()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"parameter1\":\"" ).append(String.valueOf(getParameter1()) ).append("\"");
		sResult.append( ",");
		sResult.append( "\"parameter2\":\"" ).append(String.valueOf(getParameter2()) ).append("\"");
		sResult.append("}");
		return sResult.toString();
	}

	/** toList method*/
	public java.util.List<String> toList()
	{

		java.util.List<String> list = new java.util.ArrayList<String>();
		list.add( String.valueOf(getId()));
		list.add( String.valueOf(getDate()));
		list.add( String.valueOf(getEquipmentType()));
		list.add( String.valueOf(getAlarmeType()));
		list.add( String.valueOf(getEquipmentName()));
		list.add( String.valueOf(getEquipmentId()));
		list.add( String.valueOf(getDescription()));
		list.add( String.valueOf(getExternalId()));
		list.add( String.valueOf(getParameter1()));
		list.add( String.valueOf(getParameter2()));
		return list;
	}

	/** getAttributeNames method*/
	public java.util.List<String> getAttributeNames()
	{

		java.util.List<String> list = new java.util.ArrayList<String>();
		list.add( "id");
		list.add( "date");
		list.add( "equipmentType");
		list.add( "alarmeType");
		list.add( "equipmentName");
		list.add( "equipmentId");
		list.add( "description");
		list.add( "externalId");
		list.add( "parameter1");
		list.add( "parameter2");
		return list;
	}

}
	//** Database fields
